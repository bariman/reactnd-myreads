{"version":3,"sources":["BookshelfChanger.js","Book.js","Bookshelf.js","ListBooks.js","BooksAPI.js","SearchBooks.js","App.js","reportWebVitals.js","index.js"],"names":["BookshelfChanger","state","value","props","book","shelf","handleChange","event","setState","target","moveBook","className","this","onChange","disabled","React","Component","Book","thumbnail","imageLinks","style","width","height","backgroundImage","title","authors","join","Bookshelf","showSearchPage","books","bookshelf","map","id","bookshelves","key","ListBooks","filter","to","api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","SearchBooks","updateQuery","trim","searchBooks","BookAPI","error","type","placeholder","length","BooksApp","updatedBooks","b","concat","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad7c6523.chunk.js","sourcesContent":["import React from 'react'\n\nclass BookshelfChanger extends React.Component {\n  state = {\n    value: this.props.book.shelf,\n  };\n\n  handleChange = event => {\n    this.setState({\n      value: event.target.value,\n    })\n    this.props.moveBook(this.props.book, event.target.value)\n  }\n\n  render() {\n    return (\n      <div className=\"book-shelf-changer\">\n        <select value={this.state.value || 'none'} onChange={this.handleChange}>\n          <option value=\"move\" disabled>Move to...</option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    )\n  }\n}\n\nexport default BookshelfChanger","import React from 'react'\nimport BookshelfChanger from \"./BookshelfChanger\";\n\nclass Book extends React.Component {\n  render() {\n    const {book, moveBook} = this.props\n    const thumbnail = book.imageLinks ? book.imageLinks.thumbnail : null\n    return (\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${thumbnail})` }}></div>\n          <BookshelfChanger\n            book={book}\n            moveBook={moveBook}\n          />\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\n      </div>\n    )\n  }\n}\n\nexport default Book","import React from 'react'\nimport Book from \"./Book\";\n\nclass Bookshelf extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n  }\n\n  render() {\n    const books = this.props.books\n    return (\n      <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">{this.props.bookshelf.title}</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {books.map((book) => (\n                    <li key={book.id} className='book'>\n                      <Book\n                        book={book}\n                        moveBook={this.props.moveBook}\n                      />\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            </div>\n    )\n  }\n}\n\nexport default Bookshelf","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport Bookshelf from \"./Bookshelf\";\n\nconst bookshelves = [\n  {\n    key: 'currentlyReading',\n    title: \"Currently Reading\",\n  },\n  {\n    key: 'wantToRead',\n    title: 'Want to Read',\n  },\n  {\n    key: 'read',\n    title: 'Read',\n  }\n]\n\nclass ListBooks extends React.Component {\n\n  render() {\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            {bookshelves.map((bookshelf) => (\n              <Bookshelf key={bookshelf.key}\n                         books={this.props.books.filter(book => book.shelf === bookshelf.key)}\n                         bookshelf={bookshelf}\n                         moveBook={this.props.moveBook}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"search\">Add a book</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ListBooks","const api = \"https://reactnd-books-api.udacity.com\"\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport * as BookAPI from \"./BooksAPI\"\nimport Book from \"./Book\";\n\nclass SearchBooks extends React.Component {\n  state = {\n    books: [],\n    query: ''\n  }\n\n  componentDidMount() {\n    BookAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books: books\n        }))\n      })\n  }\n\n  updateQuery = (query) => {\n    query = query.trim()\n    this.setState(() => ({\n      query: query\n    }))\n    if (query !== '') {\n      this.searchBooks(query)\n    }\n  }\n\n  searchBooks = (query) => {\n    BookAPI.search(query)\n      .then((books) => {\n        !books || books.error ? this.setState({ books: [] }) : this.setState({ books: books })\n      }\n    );\n  }\n\n  render() {\n    const books = this.state.books\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">Close</Link>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          { books.length ?\n            <ol className=\"books-grid\">\n            {books.map((book) => (\n              <li key={book.id} className='book'>\n                <Book moveBook={this.props.moveBook} book={book}/>\n              </li>\n            ))}\n          </ol>\n          : <p>No results</p>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBooks","import React from 'react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport ListBooks from \"./ListBooks\";\nimport SearchBooks from \"./SearchBooks\";\nimport './App.css'\nimport * as BookAPI from \"./BooksAPI\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  }\n\n  moveBook = (book, shelf) => {\n    BookAPI.update(book, shelf);\n    let updatedBooks = this.state.books.filter(b => b.id !== book.id);\n\n    if (shelf !== 'none') {\n      book.shelf = shelf;\n      updatedBooks = updatedBooks.concat(book);\n    }\n\n    this.setState({\n      books: updatedBooks,\n    });\n  }\n\n  componentDidMount() {\n    BookAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books: books\n        }))\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<ListBooks moveBook={this.moveBook} books={this.state.books}/>}/>\n          <Route path=\"/search\" element={<SearchBooks moveBook={this.moveBook} />}/>\n        </Routes>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}